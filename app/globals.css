@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import only the scales you need */
@import "@radix-ui/colors/gray.css";
@import "@radix-ui/colors/blue.css";
@import "@radix-ui/colors/green.css";
@import "@radix-ui/colors/red.css";
@import "@radix-ui/colors/gray-dark.css";
@import "@radix-ui/colors/blue-dark.css";
@import "@radix-ui/colors/green-dark.css";
@import "@radix-ui/colors/red-dark.css";

@layer base {
  :root {
    --bg: var(--gray-1);
    --boxBg: var(--gray-4);
  }

  .light {
    --contrast-color: #fff;
    .prose {
      --tw-prose-headings: var(--gray-12);
      --tw-prose-body: var(--gray-12);
      --tw-prose-bold: var(--gray-12);
      --tw-prose-links: var(--blue-11);
      --tw-prose-code: var(--gray-12);
      --tw-prose-quotes: var(--gray-12);
    }
  }

  .dark {
    --contrast-color: #0b0b0b;
    .prose {
      --tw-prose-headings: var(--gray-12);
      --tw-prose-body: var(--gray-11);
      --tw-prose-bold: var(--gray-11);
      --tw-prose-links: var(--blue-11);
      --tw-prose-code: var(--gray-11);
      --tw-prose-quotes: var(--gray-11);
    }
    h3 code {
      @apply !text-lg md:!text-xl;
    }

    pre {
      @apply !px-0 rounded-md overflow-x-auto py-4;
    }

    pre [data-line] {
      @apply px-4;
    }

    code {
      @apply text-xs !leading-loose border border-primary;
    }

    pre > code {
      counter-reset: line;
      border-radius: 0.75rem;
      padding-top: 0.5rem;
    }

    @media (prefers-color-scheme: light) {
      code[data-theme*=" "],
      code[data-theme*=" "] span {
        color: var(--shiki-light);
        border-radius: 0.75rem;
      }
    }

    @media (prefers-color-scheme: dark) {
      code[data-theme*=" "],
      code[data-theme*=" "] span {
        color: var(--shiki-dark);
        border-radius: 0.75rem;
      }
    }

    code[data-line-numbers] {
      counter-reset: line;
    }

    code[data-line-numbers] > [data-line]::before {
      counter-increment: line;
      content: counter(line);
      @apply inline-block w-4 mr-4 text-right text-gray-500;
    }

    code {
      counter-reset: line;
    }

    code > [data-line]::before {
      counter-increment: line;
      content: counter(line);

      /* Other styling */
      display: inline-block;
      width: 1rem;
      margin-right: 2rem;
      text-align: right;
      color: gray;
    }

    code[data-line-numbers-max-digits="2"] > [data-line]::before {
      width: 2rem;
    }

    code[data-line-numbers-max-digits="3"] > [data-line]::before {
      width: 3rem;
    }
  }

  .main-header {
    -webkit-tap-highlight-color: transparent;
  }

  body {
    overflow-x: hidden;
    background-color: var(--bg);
  }
}

@layer utilities {
  /* Chrome, Safari and Opera */
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .no-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }
}

input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus {
  transition: background-color 5000s ease-in-out 0s;
}

@media (hover: hover) {
  .animated-list:hover li {
    opacity: 0.5;
  }

  .animated-list:hover li:hover {
    opacity: 1;
  }
}

.animate-in {
  animation-delay: calc(var(--index) * 130ms);
}

.overflow-x-scroll.snap-x::-webkit-scrollbar {
  /* hide scrollbars with webkit scrollbar */
  display: none;
}
